// SPDX-License-Identifier: MIT 
pragma solidity ^0.8.17;


contract SmartContract {
    uint public value;

    function setValue(uint newValue) public {
        require(newValue != 0, "Value must be non-zero");
        value = newValue;
    }

    function assertExample(uint number) public pure returns (uint) {
        assert(number != 0);
        return number * 2;
    }
     function divide(uint _numerator, uint _denomenator) public pure returns (uint){
        if(_numerator<_denomenator){
           
            revert("please provide numerator greater than denomenator");
            
        }
        return _numerator/_denomenator;
       
}
}

